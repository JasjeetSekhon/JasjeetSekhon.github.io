# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
set.seed(12)
n=100
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
set.seed(12)
n=10000
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
fisher.test(table(z1,z2))
set.seed(12)
n=10000
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cov(z1,z2)
set.seed(12)
n=10
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cov(z1,z2)
set.seed(12)
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cov(z1,z2)
z1
z2
cor(z1,z2)
cor(z1,z2)
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = apply(matrix(seq(2,100,length=20),ncol=1),1,f.cor)
matrix(seq(2,100,length=20),ncol=1)
f.cor
n0=2
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
rm(n0)
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = apply(matrix(seq(2,100,length=20),ncol=1),1,f.cor)
cor.vec = rep(999,20)
for (i in c(1:20)){
cor.vec[i] = f.cor(seq(2,100,length=20)[i])
}
i
seq(2,100,length=20)
seq(2,100,by=10)
cor.vec = rep(999,20)
for (i in c(1:20)){
cor.vec[i] = f.cor(seq(2,100,by=10)[i])
}
i
seq(2,100,by=10)[i]
cor.vec = rep(999,10)
for (i in c(1:20)){
cor.vec[i] = f.cor(seq(2,100,by=10)[i])
}
cor.vec = rep(999,10)
for (i in c(1:10)){
cor.vec[i] = f.cor(seq(2,100,by=10)[i])
}
cor.vec
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = rep(999,10)
for (i in c(1:10)){
cor.vec[i] = f.cor(seq(2,100,by=10)[i])
}
cor.vec
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = rep(999,10)
for (i in c(1:10)){
cor.vec[i] = f.cor(seq(2,1000,by=10)[i])
}
cor.vec
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = rep(999,10)
for (i in c(1:10)){
cor.vec[i] = f.cor(seq(2,1000,by=10)[i])
}
cor.vec
n.vec = seq(2,1000,by=10)
par(cex=0.7)
plot(n.vec,cor.vec)
n.vec = seq(2,1000,by=10)
n.vec
cor.vec = rep(999,10)
n.vec = seq(2,1000,length=10)
n.vec
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
cor.vec = rep(999,10)
n.vec = seq(2,1000,by=50)
for (i in c(1:10)){
cor.vec[i] = f.cor(n.vec[i])
}
par(cex=0.7)
plot(n.vec,cor.vec)
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
n.vec = seq(2,1000,by=50)
cor.vec = rep(999,length(n.vec))
for (i in c(1:length(n.vec))){
cor.vec[i] = f.cor(n.vec[i])
}
par(cex=0.7)
plot(n.vec,cor.vec)
par(cex=0.7)
plot(n.vec,cor.vec)
par(cex=0.7)
plot(n.vec[-1],cor.vec[-1])
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
n.vec = seq(2,100,by=50)
cor.vec = rep(999,length(n.vec))
for (i in c(1:length(n.vec))){
cor.vec[i] = f.cor(n.vec[i])
}
par(cex=0.7)
plot(n.vec[-1],cor.vec[-1])
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
n.vec = seq(2,100,by=4)
cor.vec = rep(999,length(n.vec))
for (i in c(1:length(n.vec))){
cor.vec[i] = f.cor(n.vec[i])
}
par(cex=0.7)
plot(n.vec[-1],cor.vec[-1])
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
n.vec = seq(2,100,by=2)
cor.vec = rep(999,length(n.vec))
for (i in c(1:length(n.vec))){
cor.vec[i] = f.cor(n.vec[i])
}
par(cex=0.7)
plot(n.vec[-1],cor.vec[-1])
par(cex=0.7)
plot(n.vec,cor.vec)
plot(n.vec,cor.vec,pch=16)
plot(n.vec,cor.vec,pch=16,col="blue2")
par(cex=0.7)
plot(n.vec,cor.vec,pch=16,col="blue2",ylim=c(-1,0.1))
abline(h=0,col="red2",lwd=2)
par(cex=0.7)
plot(n.vec,cor.vec,pch=16,col="blue2",ylim=c(-1,0.1))
abline(h=0,col="red2",lwd=2,lty=2)
par(cex=0.7)
plot(n.vec,cor.vec,pch=16,col="blue2",ylim=c(-1,0.1),las=1,
ylab="Correlation",xlab="Sample size (N)")
abline(h=0,col="red2",lwd=2,lty=2)
setwd("~/Documents/slides.permutation")
rm(list=ls(all=TRUE))
set.seed(12)
### Example: Complete correlation
n=2
y = rnorm(n,mean=0,sd=1)
z = c(rep(1,n/2),rep(0,n/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=1000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
cor(z1,z2)
table(z1,z2)
### Illustration:
f.cor = function(n0){
y = rnorm(n0,mean=0,sd=1)
z = c(rep(1,n0/2),rep(0,n0/2))
# what is the covariance between z_i (i=1) and z_j (j=2) ?
# Answer: use a Monta-Carlo simulation:
R=5000
z1<-z2 <- rep(999,R)
for (i in c(1:R)){
z0 = sample(z,n0,replace=FALSE)
z1[i] = z0[1]
z2[i] = z0[2]
}
return(cor(z1,z2))
}
n.vec = seq(2,100,by=2)
cor.vec = rep(999,length(n.vec))
for (i in c(1:length(n.vec))){
cor.vec[i] = f.cor(n.vec[i])
}
pdf(file="figure_cov.pdf")
par(cex=0.7)
plot(n.vec,cor.vec,pch=16,col="blue2",ylim=c(-1,0.1),las=1,
ylab="Correlation",xlab="Sample size (N)")
abline(h=0,col="red2",lwd=2,lty=2)
dev.off()
list.files()
cor
cor.vec
pdf(file="figure_cov.pdf",width=4.5,height=4)
par(cex=0.7)
plot(n.vec,cor.vec,pch=16,col="blue2",ylim=c(-1,0.1),las=1,
ylab="Correlation",xlab="Sample size (N)")
abline(h=0,col="red2",lwd=2,lty=2)
dev.off()
